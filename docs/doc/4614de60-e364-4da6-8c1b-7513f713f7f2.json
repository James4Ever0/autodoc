{
    "summary": "The code converts JSON files to Markdown by counting the number of files, processing individual files, and writing markdown content to specified output files while handling errors. It uses `fs.writeFile` and `traverseFileSystem`, and logs success using `spinnerSuccess`.",
    "details": [
        {
            "comment": "This code snippet is defining a function `convertJsonToMarkdown` which takes an object of parameters and converts JSON files in the specified input directory to Markdown files in the output directory. It counts the number of files in the project by recursively traversing the file system, then creates markdown files for each code file found during this process. The function also takes various configuration options such as project name, root folder, output folder, prompt for file and folder names, content type, target audience, and link hosting.",
            "location": "\"/media/root/Prima/works/autodoc/docs/src/src/cli/commands/index/convertJsonToMarkdown.ts\":0-43",
            "content": "import fs from 'node:fs/promises';\nimport path from 'path';\nimport {\n  AutodocRepoConfig,\n  FileSummary,\n  FolderSummary,\n  ProcessFile,\n} from '../../../types';\nimport { traverseFileSystem } from '../../utils/traverseFileSystem.js';\nimport { spinnerSuccess, updateSpinnerText } from '../../spinner.js';\nimport { getFileName } from '../../utils/FileUtil.js';\nexport const convertJsonToMarkdown = async ({\n  name: projectName,\n  root: inputRoot,\n  output: outputRoot,\n  filePrompt: filePrompt,\n  folderPrompt: folderPrompt,\n  contentType: contentType,\n  targetAudience: targetAudience,\n  linkHosted: linkHosted,\n}: AutodocRepoConfig) => {\n  /**\n   * Count the number of files in the project\n   */\n  let files = 0;\n  await traverseFileSystem({\n    inputPath: inputRoot,\n    projectName,\n    processFile: () => {\n      files++;\n      return Promise.resolve();\n    },\n    ignore: [],\n    filePrompt,\n    folderPrompt,\n    contentType,\n    targetAudience,\n    linkHosted,\n  });\n  /**\n   * Create markdown files for each code file in the project\n   */"
        },
        {
            "comment": "This code defines a function `processFile` that reads the content of a JSON file, extracts its summary and questions (if applicable), and writes them to a corresponding Markdown file. It also creates any necessary output directories if they don't exist already. The function handles errors when reading files or creating directories.",
            "location": "\"/media/root/Prima/works/autodoc/docs/src/src/cli/commands/index/convertJsonToMarkdown.ts\":45-85",
            "content": "  const processFile: ProcessFile = async ({\n    fileName,\n    filePath,\n  }): Promise<void> => {\n    const content = await fs.readFile(filePath, 'utf-8');\n    // TODO: Handle error\n    if (!content) return;\n    const markdownFilePath = path\n      .join(outputRoot, filePath)\n      .replace(inputRoot, '');\n    /**\n     * Create the output directory if it doesn't exist\n     */\n    try {\n      await fs.mkdir(markdownFilePath.replace(fileName, ''), {\n        recursive: true,\n      });\n    } catch (error) {\n      console.error(error);\n      return;\n    }\n    const { url, summary, questions } =\n      fileName === 'summary.json'\n        ? (JSON.parse(content) as FolderSummary)\n        : (JSON.parse(content) as FileSummary);\n    /**\n     * Only include the file if it has a summary\n     */\n    const markdown =\n      summary.length > 0\n        ? `[View code on GitHub](${url})\\n\\n${summary}\\n${\n            questions ? '## Questions: \\n ' + questions : ''\n          }`\n        : '';\n    const outputPath = getFileName(markdownFilePath, '.', '.md');"
        },
        {
            "comment": "This code snippet is responsible for converting JSON to Markdown and creating files. It first writes the converted markdown content to a specified output file using `fs.writeFile`. The function `traverseFileSystem` is then called with various parameters to process files within an input root directory, ignoring any specified in the ignore list. Finally, the success of the operation is logged using `spinnerSuccess`, indicating the number of markdown files created.",
            "location": "\"/media/root/Prima/works/autodoc/docs/src/src/cli/commands/index/convertJsonToMarkdown.ts\":86-102",
            "content": "    await fs.writeFile(outputPath, markdown, 'utf-8');\n  };\n  updateSpinnerText(`Creating ${files} markdown files...`);\n  await traverseFileSystem({\n    inputPath: inputRoot,\n    projectName,\n    processFile,\n    ignore: [],\n    filePrompt,\n    folderPrompt,\n    contentType,\n    targetAudience,\n    linkHosted,\n  });\n  spinnerSuccess(`Created ${files} markdown files...`);\n};"
        }
    ]
}